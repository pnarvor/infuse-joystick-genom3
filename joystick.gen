/*/
 * Copyright (c) 2016 LAAS/CNRS
 * All rights reserved.
 *
 * Redistribution and use  in source  and binary  forms,  with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 *   1. Redistributions of  source  code must retain the  above copyright
 *      notice and this list of conditions.
 *   2. Redistributions in binary form must reproduce the above copyright
 *      notice and  this list of  conditions in the  documentation and/or
 *      other materials provided with the distribution.
 *
 *                                      Anthony Mallet on Thu Apr 14 2016
 */
#pragma require "openrobots-idl >= 1.2"

#include "or/hid/joystick.gen"

component joystick {
  version		"1.0";
  email			"openrobots@laas.fr";
  lang			"c";

  codels-require	"sdl2";

  provides		or_joystick;

  port multiple out	or_joystick::state device;

  struct device_s {
    long id;
    string<32> name;
    unsigned short buttons, axes, hats;
  };

  exception e_sdl { string<256> what; };
  exception e_nomem, e_noent;

  ids {
    sequence<device_s> devices;
  };

  task publish {
    codel<start> joystick_init(out ::ids) yield poll;
    codel<stop> joystick_fini(inout devices) yield ether;

    async codel<poll> joystick_wait_event() yield poll, event;
    codel<event> joystick_main(inout devices, out device) yield poll;

    throw e_sdl;
  };

  function device_list(out sequence< string<32> > device_list) {
    doc	"Return the list of available devices";
    codel joystick_device_list(in devices, out device_list);

    throw e_nomem;
  };

  activity rename(in string<32> name, in string<32> newname) {
    doc	"Rename an existing device";
    task publish;

    codel<start> joystick_rename(in name, in newname,
                                 inout devices, out device)
      yield ether;

    throw e_noent;
  };
};
